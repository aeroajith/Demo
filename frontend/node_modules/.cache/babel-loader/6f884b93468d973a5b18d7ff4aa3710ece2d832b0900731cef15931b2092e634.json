{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { chartReducer } from \"./Components/Reducers/ChartReducer\";\nimport { orderReducer } from \"./Components/Reducers/OrderReducer\";\nimport { userLoginReducer } from \"./Components/Reducers/UserReducer\";\nimport { pokeReducer } from \"./Components/Reducers/PokeReducer\";\nconst reducer = combineReducers({\n  revenueLists: chartReducer,\n  ordersList: orderReducer,\n  userLogin: userLoginReducer,\n  pokesData: pokeReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","chartReducer","orderReducer","userLoginReducer","pokeReducer","reducer","revenueLists","ordersList","userLogin","pokesData","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"sources":["D:/Study/frontend/src/Store.js"],"sourcesContent":["import {createStore, combineReducers,applyMiddleware} from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport { chartReducer } from \"./Components/Reducers/ChartReducer\"\r\nimport { orderReducer } from \"./Components/Reducers/OrderReducer\"\r\nimport { userLoginReducer } from \"./Components/Reducers/UserReducer\"\r\nimport {  pokeReducer } from \"./Components/Reducers/PokeReducer\"\r\n\r\nconst reducer = combineReducers({\r\n    revenueLists: chartReducer,\r\n    ordersList : orderReducer,\r\n    userLogin: userLoginReducer,\r\n    pokesData : pokeReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst initialState = {\r\n    userLogin:{userInfo : userInfoFromStorage}\r\n}\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,eAAe,EAACC,eAAe,QAAO,OAAO;AAClE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAASC,YAAY,QAAQ,oCAAoC;AACjE,SAASC,YAAY,QAAQ,oCAAoC;AACjE,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAAUC,WAAW,QAAQ,mCAAmC;AAEhE,MAAMC,OAAO,GAAGR,eAAe,CAAC;EAC5BS,YAAY,EAAEL,YAAY;EAC1BM,UAAU,EAAGL,YAAY;EACzBM,SAAS,EAAEL,gBAAgB;EAC3BM,SAAS,EAAGL;AAChB,CAAC,CAAC;AAEF,MAAMM,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAGvD,MAAMG,YAAY,GAAG;EACjBP,SAAS,EAAC;IAACQ,QAAQ,EAAGN;EAAmB;AAC7C,CAAC;AACD,MAAMO,UAAU,GAAG,CAAClB,KAAK,CAAC;AAC1B,MAAMmB,KAAK,GAAGtB,WAAW,CAACS,OAAO,EAAEU,YAAY,EAC3Cf,mBAAmB,CAACF,eAAe,CAAC,GAAGmB,UAAU,CAAC,CAAC,CAAC;AAGxD,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}